<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.project_loa.repository.NoticeRepository">


<insert id="notice_reply_insert">

	<![CDATA[
		{
			call declare
			begin
				update notice set step = step +1 where root = #{root} and step > #{step};

				insert into notice (id, title, content, writer, filename, filepath, root, step, indent )
				values (NEXTVAL(seq_notice), #{title}, #{content}, #{writer},
						#{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR},
						#{root}, #{step}+1, #{indent}+1);
			end
		}
	]]>

</insert>


<update id="notice_update">
	update notice set title=#{title}, content=#{content}
		, filename = #{filename, jdbcType=VARCHAR}
		, filepath = #{filepath, jdbcType=VARCHAR} 
	where id = #{id}
</update>



<delete id="notice_delete">
	delete from notice
	where id = #{id}
</delete>


<update id="notice_read">
	update notice set readcnt = readcnt + 1
	where id = #{id}
</update>


<select id="notice_detail" resultType="com.example.project_loa.notice.NoticeVO">
	select n.*, (select name from member where id = n.writer) name
	from notice n
	where id = #{id}
</select>



<insert id="notice_insert">
	insert into notice (id, root, title, content, writer, filename, filepath)
	values (NEXTVAL(seq_notice), LASTVAL(seq_notice), #{title}, #{content}, #{writer},
			#{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR})
</insert>


<sql id="where_search">
	<if test="search == 'title' or search == 'content'">
		where ${search} like '%'||#{keyword}||'%'	
	</if>
	

	<if test="search == 'writer' ">
		where writer in ( select id from member where name like '%'||#{keyword}||'%' )
	</if>
	
	<if test="search == 'all' ">
		where title like '%'||#{keyword}||'%'
		or content  like '%'||#{keyword}||'%'
		or writer in ( select id from member where name like '%'||#{keyword}||'%' )	
	</if>
</sql>



<select id="notice_totallist" resultType="integer">
	select count(*) from notice <include refid="where_search" />
</select>



<select id="notice_list" resultType="com.example.project_loa.notice.NoticeVO">
	SELECT *
	FROM (SELECT  ROW_NUMBER() over(ORDER BY id ASC) AS no, n.*, (SELECT NAME FROM member WHERE id = n.writer) NAME
	FROM  (select * from notice  <include refid="where_search" />
	order by root, step DESC) n
	order by no DESC) AS DO
	WHERE no BETWEEN #{beginList} AND #{endList};
</select>

<insert id="reply_insert">
	insert into reply (reply_id, notice_id, step, content, writer, name)
	values (NEXTVAL(), #{notice_id}, #{step}, #{content}, #{writer}, #{name});
</insert>

<select id="reply_list" resultType="com.example.project_loa.notice.NoticeReplyVO">
	select *
	from reply
	where notice_id = #{notice_id};
</select>

<update id="notice_replycnt_modify">
	update notice set replycnt = <include refid="notice_replycnt"/>
	where id = #{notice_id};
</update>

<select id="notice_relpycnt" resultType="integer">
	select count(*)
	from reply
	where notice_id = #{notice_id};
</select>

</mapper>